<?xml version="1.0"?>
<doc>
    <assembly>
        <name>System.Diagnostics.Stopwatch</name>
    </assembly>
    <members>
        <member name="T:System.Device.DelayHelper">
            <summary>
            Helpers for short waits.
            </summary>
        </member>
        <member name="M:System.Device.DelayHelper.Delay(System.TimeSpan,System.Boolean)">
            <summary>
            Delay for at least the specified <paramref name="time" />.
            </summary>
            <param name="time">The amount of time to delay.</param>
            <param name="allowThreadYield">
            True to allow yielding the thread. If this is set to false, on single-proc systems
            this will prevent all other code from running.
            </param>
        </member>
        <member name="M:System.Device.DelayHelper.DelayMicroseconds(System.Int32,System.Boolean)">
            <summary>
            Delay for at least the specified <paramref name="microseconds"/>.
            </summary>
            <param name="microseconds">The number of microseconds to delay.</param>
            <param name="allowThreadYield">
            True to allow yielding the thread. If this is set to false, on single-proc systems
            this will prevent all other code from running.
            </param>
        </member>
        <member name="M:System.Device.DelayHelper.DelayMilliseconds(System.Int32,System.Boolean)">
            <summary>
            Delay for at least the specified <paramref name="milliseconds"/>
            </summary>
            <param name="milliseconds">The number of milliseconds to delay.</param>
            <param name="allowThreadYield">
            True to allow yielding the thread. If this is set to false, on single-proc systems
            this will prevent all other code from running.
            </param>
        </member>
        <member name="T:System.Diagnostics.Stopwatch">
            <summary>
            Provides a set of methods and properties that you can use to accurately measure elapsed time.
            </summary>
        </member>
        <member name="F:System.Diagnostics.Stopwatch.Frequency">
            <summary>
            Gets the frequency of the timer as the number of ticks per second. This field is read-only.
            </summary>
        </member>
        <member name="F:System.Diagnostics.Stopwatch.IsHighResolution">
            <summary>
            Indicates whether the timer is based on a high-resolution performance counter.
            This field is read-only.
            </summary>
        </member>
        <member name="M:System.Diagnostics.Stopwatch.#ctor">
            <summary>
            Initializes a new instance of the System.Diagnostics.Stopwatch class.
            </summary>
        </member>
        <member name="P:System.Diagnostics.Stopwatch.Elapsed">
            <summary>
            Gets the total elapsed time measured by the current instance.
            </summary>
        </member>
        <member name="P:System.Diagnostics.Stopwatch.ElapsedMilliseconds">
            <summary>
            Gets the total elapsed time measured by the current instance, in milliseconds.
            </summary>
        </member>
        <member name="P:System.Diagnostics.Stopwatch.ElapsedTicks">
            <summary>
            Gets the total elapsed time measured by the current instance, in timer ticks.
            </summary>
        </member>
        <member name="P:System.Diagnostics.Stopwatch.IsRunning">
            <summary>
            Gets a value indicating whether the System.Diagnostics.Stopwatch timer is running.
            </summary>
        </member>
        <member name="M:System.Diagnostics.Stopwatch.GetTimestamp">
            <summary>
            Gets the current number of ticks in the timer mechanism.
            </summary>
            <returns></returns>
        </member>
        <member name="M:System.Diagnostics.Stopwatch.StartNew">
            <summary>
            Initializes a new System.Diagnostics.Stopwatch instance, sets the elapsed time
            property to zero, and starts measuring elapsed time.
            </summary>
            <returns>A System.Diagnostics.Stopwatch that has just begun measuring elapsed time.</returns>
        </member>
        <member name="M:System.Diagnostics.Stopwatch.Reset">
            <summary>
            Stops time interval measurement and resets the elapsed time to zero.
            </summary>
        </member>
        <member name="M:System.Diagnostics.Stopwatch.Restart">
            <summary>
            Stops time interval measurement, resets the elapsed time to zero, and starts
            measuring elapsed time.
            </summary>
        </member>
        <member name="M:System.Diagnostics.Stopwatch.Start">
            <summary>
            Starts, or resumes, measuring elapsed time for an interval.
            </summary>
        </member>
        <member name="M:System.Diagnostics.Stopwatch.Stop">
            <summary>
            Stops measuring elapsed time for an interval.
            </summary>
        </member>
    </members>
</doc>
